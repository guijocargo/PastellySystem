package view;

import controller.ClienteDao;
import controller.ReservaDao;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Acessa
 */
public class FrmConsultaReserva extends javax.swing.JInternalFrame
        implements IOuvintesPadrao, ITeclasPadrao {

    private static FrmConsultaReserva _instance = null;

    public static FrmConsultaReserva getInstance() {
        if (_instance == null) {
            _instance = new FrmConsultaReserva();
        }
        return _instance;
    }

    /**
     * Creates new form FrmConsultaClientes
     */
    private FrmConsultaReserva() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBuscaCMesa = new javax.swing.JLabel();
        lblTermosCMesa = new javax.swing.JLabel();
        cmbCliente = new javax.swing.JComboBox();
        btnConsultarCMesa = new javax.swing.JButton();
        lblHora1CMesa = new javax.swing.JLabel();
        txtHora1CMesa = new javax.swing.JFormattedTextField();
        lblHora2CMesa = new javax.swing.JLabel();
        txtHora2CMesa = new javax.swing.JFormattedTextField();
        dcrDataBusca = new com.toedter.calendar.JDateChooser();
        lblDataCMEsa = new javax.swing.JLabel();
        scpCMesa = new javax.swing.JScrollPane();
        tabConsultaReserva = new javax.swing.JTable();
        cmbBuscaCMesa = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(254, 254, 204));
        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Consultar Reservas");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            @Override
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            @Override
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            @Override
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            @Override
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            @Override
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            @Override
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            @Override
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        lblBuscaCMesa.setText("Buscar por:");

        lblTermosCMesa.setText("Cliente");

        cmbCliente.setEnabled(false);
        cmbCliente.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClienteActionPerformed(evt);
            }
        });

        btnConsultarCMesa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnConsultarCMesa.setText("CONSULTAR");
        btnConsultarCMesa.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarCMesaActionPerformed(evt);
            }
        });

        lblHora1CMesa.setText("HORA:");
        lblHora1CMesa.setEnabled(false);

        txtHora1CMesa.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("h:mm:ss"))));
        txtHora1CMesa.setText("12:00:00");
        txtHora1CMesa.setEnabled(false);
        txtHora1CMesa.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHora1CMesaActionPerformed(evt);
            }
        });

        lblHora2CMesa.setText("ATÃ‰:");
        lblHora2CMesa.setEnabled(false);

        txtHora2CMesa.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("h:mm:ss"))));
        txtHora2CMesa.setText("12:00:00");
        txtHora2CMesa.setEnabled(false);
        txtHora2CMesa.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHora2CMesaActionPerformed(evt);
            }
        });

        dcrDataBusca.setEnabled(false);

        lblDataCMEsa.setText("DATA:");
        lblDataCMEsa.setEnabled(false);

        tabConsultaReserva.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cliente", "Codigo da Reserva", "Data da Reserva", "Hora Inicio", "Hora Fim"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scpCMesa.setViewportView(tabConsultaReserva);

        cmbBuscaCMesa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Data", "Cliente", "Hora" }));
        cmbBuscaCMesa.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBuscaCMesaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTermosCMesa)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblBuscaCMesa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cmbBuscaCMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblDataCMEsa)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dcrDataBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(24, 24, 24)
                                        .addComponent(lblHora1CMesa)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtHora1CMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblHora2CMesa)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtHora2CMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(249, 249, 249)
                                .addComponent(btnConsultarCMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 131, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scpCMesa, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDataCMEsa)
                            .addComponent(cmbBuscaCMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBuscaCMesa))
                        .addComponent(dcrDataBusca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblHora2CMesa)
                        .addComponent(txtHora1CMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtHora2CMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblHora1CMesa)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTermosCMesa)
                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnConsultarCMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(scpCMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtHora1CMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHora1CMesaActionPerformed
        
    }//GEN-LAST:event_txtHora1CMesaActionPerformed

    private void txtHora2CMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHora2CMesaActionPerformed
        
    }//GEN-LAST:event_txtHora2CMesaActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        _instance = null;
        setVisible(false);
    }//GEN-LAST:event_formInternalFrameClosing

    private void cmbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClienteActionPerformed
        
    }//GEN-LAST:event_cmbClienteActionPerformed

private void btnConsultarCMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarCMesaActionPerformed

    if (cmbBuscaCMesa.getSelectedIndex() == 1) {
        try {
            ReservaDao c = new ReservaDao();
            SimpleDateFormat sdfData = new SimpleDateFormat("yyyy/MM/dd");

            c.setDtReserva(sdfData.format(dcrDataBusca.getDate()));

            ArrayList<ReservaDao> listaReserva = c.pesquisarPorData(c);
            atualizaTable(listaReserva);
        } catch (Exception ex) {
            JOptionPane.showConfirmDialog(null, ex);
        }
    } else if (cmbBuscaCMesa.getSelectedIndex() == 2) {
        try {
            ReservaDao c = new ReservaDao();

            c.setCodCli(Integer.parseInt(cmbCliente.getSelectedItem().toString().substring(0, 3)));

            ArrayList<ReservaDao> listaReserva = c.pesquisarPorCliente(c);
            atualizaTable(listaReserva);
        } catch (Exception ex) {
            JOptionPane.showConfirmDialog(null, ex);
        }
    }
}//GEN-LAST:event_btnConsultarCMesaActionPerformed

private void cmbBuscaCMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBuscaCMesaActionPerformed

    try {
        if (cmbBuscaCMesa.getSelectedIndex() == 1) {
            dcrDataBusca.setEnabled(true);
            txtHora1CMesa.setEditable(false);
            txtHora2CMesa.setEnabled(false);
            cmbCliente.setEnabled(false);
        } else if (cmbBuscaCMesa.getSelectedIndex() == 2) {
            dcrDataBusca.setEnabled(false);
            txtHora1CMesa.setEditable(false);
            txtHora2CMesa.setEnabled(false);
            cmbCliente.setEnabled(true);

            ClienteDao dao = new ClienteDao();
            cmbCliente.setModel(dao.comboModel());
        } else if (cmbBuscaCMesa.getSelectedIndex() == 3) {
            dcrDataBusca.setEnabled(false);
            txtHora1CMesa.setEnabled(true);
            txtHora2CMesa.setEnabled(true);
            cmbCliente.setEnabled(false);
        }
    } catch (Exception e) {
    }
}//GEN-LAST:event_cmbBuscaCMesaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmConsultaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmConsultaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmConsultaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmConsultaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new FrmConsultaReserva().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultarCMesa;
    private javax.swing.JComboBox cmbBuscaCMesa;
    private javax.swing.JComboBox cmbCliente;
    private com.toedter.calendar.JDateChooser dcrDataBusca;
    private javax.swing.JLabel lblBuscaCMesa;
    private javax.swing.JLabel lblDataCMEsa;
    private javax.swing.JLabel lblHora1CMesa;
    private javax.swing.JLabel lblHora2CMesa;
    private javax.swing.JLabel lblTermosCMesa;
    private javax.swing.JScrollPane scpCMesa;
    private javax.swing.JTable tabConsultaReserva;
    private javax.swing.JFormattedTextField txtHora1CMesa;
    private javax.swing.JFormattedTextField txtHora2CMesa;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setActionListener(ActionListener al) {
    }

    @Override
    public void performAction(KeyEvent evt) {
    }

    @Override
    public void performNavigateAction(KeyEvent evt) {
    }

    private void limpaTable() {
        DefaultTableModel model = (DefaultTableModel) tabConsultaReserva.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
    }

    private void atualizaTable(ArrayList<ReservaDao> reservas) {
        limpaTable();

        //SimpleDateFormat sdfData = new SimpleDateFormat("dd/MM/yyyy");
        if (reservas.isEmpty()) {
            JOptionPane.showMessageDialog(null, "NÃ£o foram encontrados reservas"
                    + " no banco de dados.", "AtenÃ§Ã£o:", JOptionPane.INFORMATION_MESSAGE);
        } else {
            DefaultTableModel dadosReserva = (DefaultTableModel) tabConsultaReserva.getModel();

            String Linha[] = new String[]{"", "", "", "", ""};
            try {
                int posicao = -1;
                for (ReservaDao reserva : reservas) {
                    posicao++;

                    dadosReserva.addRow(Linha);

                    dadosReserva.setValueAt(reserva.getCodCli(), posicao, 0);
                    dadosReserva.setValueAt(reserva.getCodReserva(), posicao, 1);
                    //dadosReserva.setValueAt(reserva.getCodUsuario(), posicao, 2);
                    dadosReserva.setValueAt(reserva.getDtReserva(), posicao, 2);
                    dadosReserva.setValueAt(reserva.getHoraInicio(), posicao, 3);
                    dadosReserva.setValueAt(reserva.getHoraFim(), posicao, 4);

                }


                tabConsultaReserva.setModel(dadosReserva);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ocorreu um erro: " + e.getMessage(),
                        "Erro:", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
}
