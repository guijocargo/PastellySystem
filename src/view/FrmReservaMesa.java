package view;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmReservaMesa.java
 *
 * Created on Mar 23, 2012, 8:10:50 PM
 */
import controller.ClienteDao;
import controller.DetReservaDao;
import controller.ReservaDao;
import controller.UserDao;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import model.ReservaBean;

/**
 *
 * @author italorossi
 */
public class FrmReservaMesa extends javax.swing.JInternalFrame
        implements IViewMetodosPadrao, IOuvintesPadrao, ITeclasPadrao {

    public List<ReservaBean> reservas = new ArrayList<ReservaBean>();
    public int intPosition = 0;
    public boolean booInclusao = false;
    public boolean booAlteracao = false;
    public DefaultTableModel defaultTableModel = new DefaultTableModel();
    MaskFormatter mfHora;
    private static FrmReservaMesa _instance = null;

    public static synchronized FrmReservaMesa getInstance() throws ClassNotFoundException, SQLException {
        if (_instance == null) {
            _instance = new FrmReservaMesa();
        }
        return _instance;
    }

    /** Creates new form FrmReservaMesa */
    private FrmReservaMesa() throws ClassNotFoundException, SQLException {
        try {

            initComponents();

//            mfHora = new MaskFormatter("##:##");
//            mfHora.setPlaceholderCharacter('_');
//            mfHora.setValueContainsLiteralCharacters(true);
//            mfHora.setValueClass(String.class);
//            DefaultFormatterFactory dffHora = new DefaultFormatterFactory(mfHora);
//            txtHoraInicio.setFormatterFactory(dffHora);
//            txtHoraFim.setFormatterFactory(dffHora);

            try {
                ClienteDao dao = new ClienteDao();
                cmbClienteMesa.setModel(dao.comboModel());
                
            } catch (SQLException ex) {
                Logger.getLogger(FrmReservaMesa.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(FrmReservaMesa.class.getName()).log(Level.SEVERE, null, ex);
            }
            mfHora = new MaskFormatter("##:##");
            mfHora.setPlaceholderCharacter('_');
            mfHora.setValueContainsLiteralCharacters(true);
            mfHora.setValueClass(String.class);
            DefaultFormatterFactory dffHora = new DefaultFormatterFactory(mfHora);
            txtHoraInicio.setFormatterFactory(dffHora);
            txtHoraFim.setFormatterFactory(dffHora);
            
            //CARREGA CODIGO DA RESERVA
//            ReservaDao resdao = new ReservaDao();
//            List<ReservaBean> ultimoCodigo = resdao.ultimoRegistro();
//        
//            Iterator<ReservaBean> itCod = ultimoCodigo.iterator();
//            while(itCod.hasNext()){
//            ReservaBean e = itCod.next();
//            int ultimoCod = e.getCodReserva();
//            
//            txtCodReserva.setText(Integer.toString(ultimoCod + 1));
//            }
            
            //CARREGA MESA
            
            
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um ParseException"
                    + " na aplicação do MaskFormatter: " + e.getMessage(), "Erro:",
                    JOptionPane.ERROR_MESSAGE);
        }

    }

    /*ReservaDao dres = new ReservaDao();
    
    SimpleDateFormat sdfData = new SimpleDateFormat("dd/MM/yyyy");
    
    sdfData.format(dcrData);
    dres.setDtReserva(dcrData.getDate());
    dres.setHoraInicio(txtHoraInicio.getValue().toString());
    dres.setHoraFim(txtHoraFim.getValue().toString());
    dres.setCodCli(cmbClienteMesa.getSelectedIndex());*/
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlReservaMesa = new javax.swing.JPanel();
        lblDataMesa = new javax.swing.JLabel();
        lblClienteMesa = new javax.swing.JLabel();
        dcrData = new com.toedter.calendar.JDateChooser();
        cmbClienteMesa = new javax.swing.JComboBox();
        scpMesa = new javax.swing.JScrollPane();
        tabMesa = new javax.swing.JTable();
        lblHora1Mesa = new javax.swing.JLabel();
        txtHoraInicio = new javax.swing.JFormattedTextField();
        lblHora2Mesa = new javax.swing.JLabel();
        txtHoraFim = new javax.swing.JFormattedTextField();
        lblClienteMesa1 = new javax.swing.JLabel();
        tobNavegador = new javax.swing.JToolBar();
        btnVoltarInicioCli = new javax.swing.JButton();
        btnVoltarCli = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        txtContador = new javax.swing.JTextField();
        lblContador = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnSeguirCli = new javax.swing.JButton();
        btnUltimoCli = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnAdicionar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblDataMesa1 = new javax.swing.JLabel();
        txtCodReserva = new javax.swing.JFormattedTextField();
        cmbMesa = new javax.swing.JComboBox();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Nova Reserva de Mesa");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        pnlReservaMesa.setBackground(new java.awt.Color(255, 255, 204));

        lblDataMesa.setText("DATA:");

        lblClienteMesa.setText("CLIENTE:");

        dcrData.setEnabled(false);

        cmbClienteMesa.setEnabled(false);

        tabMesa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", "", "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scpMesa.setViewportView(tabMesa);

        lblHora1Mesa.setText("HORA:");

        txtHoraInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("h:mm:ss"))));
        txtHoraInicio.setEnabled(false);

        lblHora2Mesa.setText("ATÉ:");

        txtHoraFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("h:mm:ss"))));
        txtHoraFim.setEnabled(false);

        lblClienteMesa1.setText("MESA:");

        tobNavegador.setBackground(new java.awt.Color(254, 254, 150));
        tobNavegador.setRollover(true);

        btnVoltarInicioCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/primeiro.png"))); // NOI18N
        btnVoltarInicioCli.setFocusable(false);
        btnVoltarInicioCli.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVoltarInicioCli.setOpaque(false);
        btnVoltarInicioCli.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVoltarInicioCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarInicioCliActionPerformed(evt);
            }
        });
        tobNavegador.add(btnVoltarInicioCli);

        btnVoltarCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/anterior.png"))); // NOI18N
        btnVoltarCli.setFocusable(false);
        btnVoltarCli.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVoltarCli.setOpaque(false);
        btnVoltarCli.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVoltarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarCliActionPerformed(evt);
            }
        });
        tobNavegador.add(btnVoltarCli);
        tobNavegador.add(jSeparator1);

        txtContador.setText("0");
        tobNavegador.add(txtContador);

        lblContador.setText("de ( 0 )");
        tobNavegador.add(lblContador);
        tobNavegador.add(jSeparator2);

        btnSeguirCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/proximo.png"))); // NOI18N
        btnSeguirCli.setFocusable(false);
        btnSeguirCli.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSeguirCli.setOpaque(false);
        btnSeguirCli.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSeguirCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeguirCliActionPerformed(evt);
            }
        });
        tobNavegador.add(btnSeguirCli);

        btnUltimoCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/ultimo.png"))); // NOI18N
        btnUltimoCli.setFocusable(false);
        btnUltimoCli.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUltimoCli.setOpaque(false);
        btnUltimoCli.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnUltimoCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoCliActionPerformed(evt);
            }
        });
        tobNavegador.add(btnUltimoCli);
        tobNavegador.add(jSeparator3);

        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/add-2-icon (2)_1.png"))); // NOI18N
        btnAdicionar.setFocusable(false);
        btnAdicionar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdicionar.setOpaque(false);
        btnAdicionar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });
        tobNavegador.add(btnAdicionar);

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/alterar.png"))); // NOI18N
        btnAlterar.setFocusable(false);
        btnAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAlterar.setOpaque(false);
        btnAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tobNavegador.add(btnAlterar);

        btnDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/delete-icon.png"))); // NOI18N
        btnDeletar.setFocusable(false);
        btnDeletar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDeletar.setOpaque(false);
        btnDeletar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tobNavegador.add(btnDeletar);
        tobNavegador.add(jSeparator4);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/basic-data-icon.png"))); // NOI18N
        btnSalvar.setEnabled(false);
        btnSalvar.setFocusable(false);
        btnSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalvar.setOpaque(false);
        btnSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        tobNavegador.add(btnSalvar);

        btnCancelar.setEnabled(false);
        btnCancelar.setFocusable(false);
        btnCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelar.setOpaque(false);
        btnCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tobNavegador.add(btnCancelar);

        lblDataMesa1.setText("CODIGO:");

        txtCodReserva.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("h:mm:ss"))));
        txtCodReserva.setEnabled(false);

        cmbMesa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4" }));
        cmbMesa.setEnabled(false);

        javax.swing.GroupLayout pnlReservaMesaLayout = new javax.swing.GroupLayout(pnlReservaMesa);
        pnlReservaMesa.setLayout(pnlReservaMesaLayout);
        pnlReservaMesaLayout.setHorizontalGroup(
            pnlReservaMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tobNavegador, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
            .addGroup(pnlReservaMesaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReservaMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlReservaMesaLayout.createSequentialGroup()
                        .addComponent(lblClienteMesa)
                        .addGap(18, 18, 18)
                        .addComponent(cmbClienteMesa, 0, 297, Short.MAX_VALUE))
                    .addGroup(pnlReservaMesaLayout.createSequentialGroup()
                        .addGroup(pnlReservaMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDataMesa1)
                            .addComponent(lblDataMesa))
                        .addGap(18, 18, 18)
                        .addGroup(pnlReservaMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlReservaMesaLayout.createSequentialGroup()
                                .addComponent(txtCodReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblClienteMesa1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlReservaMesaLayout.createSequentialGroup()
                                .addComponent(dcrData, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblHora1Mesa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblHora2Mesa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHoraFim, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addComponent(scpMesa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
        );
        pnlReservaMesaLayout.setVerticalGroup(
            pnlReservaMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReservaMesaLayout.createSequentialGroup()
                .addComponent(tobNavegador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlReservaMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataMesa1)
                    .addComponent(txtCodReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblClienteMesa1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlReservaMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDataMesa)
                    .addComponent(dcrData, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlReservaMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblHora1Mesa)
                        .addComponent(lblHora2Mesa)
                        .addComponent(txtHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtHoraFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlReservaMesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblClienteMesa)
                    .addComponent(cmbClienteMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scpMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlReservaMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlReservaMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getAccessibleContext().setAccessibleName("Nova Reserva");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        _instance = null;
        setVisible(false);
    }//GEN-LAST:event_formInternalFrameClosing

    private void btnVoltarInicioCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarInicioCliActionPerformed
        setData(0);
    }//GEN-LAST:event_btnVoltarInicioCliActionPerformed

    private void btnVoltarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarCliActionPerformed
        setData(intPosition - 1);
    }//GEN-LAST:event_btnVoltarCliActionPerformed

    private void btnSeguirCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeguirCliActionPerformed
        setData(intPosition + 1);
    }//GEN-LAST:event_btnSeguirCliActionPerformed

    private void btnUltimoCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoCliActionPerformed
        setData(reservas.size() - 1);
    }//GEN-LAST:event_btnUltimoCliActionPerformed

private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed

    habilitaCampos(true);
    booAlteracao = false;
    booInclusao = true;
    limpaCampos();
    setEnabledToolBar(false);
    novaReserva();
    cmbClienteMesa.setSelectedIndex(0);
    cmbMesa.setSelectedIndex(0);
    
    try{
    mfHora = new MaskFormatter("##:##");
    mfHora.setPlaceholderCharacter('_');
    mfHora.setValueContainsLiteralCharacters(true);
    mfHora.setValueClass(String.class);
    DefaultFormatterFactory dffHora = new DefaultFormatterFactory(mfHora);
    txtHoraInicio.setFormatterFactory(dffHora);
    txtHoraFim.setFormatterFactory(dffHora);
    
    ReservaDao resdao = new ReservaDao();
    List<ReservaBean> ultimoCodigo = resdao.ultimoRegistro();

    Iterator<ReservaBean> itCod = ultimoCodigo.iterator();
    while(itCod.hasNext()){
    ReservaBean e = itCod.next();
    int ultimoCod = e.getCodReserva();

    txtCodReserva.setText(Integer.toString(ultimoCod + 1));
    }
    }catch(Exception e){
        
    }
}//GEN-LAST:event_btnAdicionarActionPerformed

private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            
                ReservaDao resdao = new ReservaDao();
                DetReservaDao detresdao = new DetReservaDao();
                UserDao usdao = new UserDao();
                String data = new SimpleDateFormat("yyyy-MM-dd").format(dcrData.getDate());
                //SimpleDateFormat sdfData = new SimpleDateFormat("yyyy-MM-dd");
                //sdfData.format(dcrData.getDateFormatString());
     
                resdao.setCodCli(Integer.parseInt((cmbClienteMesa.getSelectedItem()).toString().substring(0, 3)));
                //txtHoraInicio.setText((cmbClienteMesa.getSelectedItem()).toString().substring(0, 3));
                resdao.setCodReserva(Integer.parseInt(txtCodReserva.getText()));
                //resdao.setCodUsuario(usdao.getCodigo());
                resdao.setCodUsuario(1);
                resdao.setDtReserva(data);
                resdao.setHoraInicio(txtHoraInicio.getText());
                resdao.setHoraFim(txtHoraFim.getText());
                
                resdao.incluir();
                
                detresdao.setCodReserva(Integer.parseInt(txtCodReserva.getText()));
                detresdao.setCodMesa(Integer.parseInt(cmbMesa.getSelectedItem().toString()));
                
                detresdao.incluir();
                
                limparTabela();
                atualizarTabela();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmReservaMesa.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(null, ex);
            Logger.getLogger(FrmReservaMesa.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    habilitaCampos(false);
    setEnabledToolBar(true);
}//GEN-LAST:event_btnSalvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmReservaMesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmReservaMesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmReservaMesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmReservaMesa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                try {
                    new FrmReservaMesa().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(FrmReservaMesa.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(FrmReservaMesa.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    /**
     * Metodo responsavel por preparar o formulario para a inclusao de um novo
     * cliente
     */
    public void novaReserva() {
        txtContador.setText("");
    }
    
    public ReservaBean carregaBean(int codUser) {
        SimpleDateFormat sdfData = new SimpleDateFormat("yyyy-MM-dd");
        sdfData.format(dcrData);
        
        ReservaBean bean = new ReservaBean(Integer.parseInt(txtCodReserva.getText()), Integer.parseInt(cmbClienteMesa.getSelectedItem().toString().substring(0,2)), codUser, dcrData.getDate().toString(), txtHoraInicio.getText(), txtHoraFim.getText());
//        ReservaBean bean = new ReservaBean(cmbClienteMesa.getSelectedItem(),
//                txtCodReserva.getText(), dcrData.getDate(), txtHoraInicio.getText(),
//                txtHoraFim.getText(), codUser);
        return bean;
    }
    /**
     * Carregar um DetalheReservaBean contendo as informacoes de um detalhe de
     * uma reserba
     * 
     * @param codReserva Codigo da reserva do detalhe a ser carregado
     * @return DetalheReservaBean contendo as informacoes do detalhe da reserva
     */
    /*public DetalheReservaBean carregaDetalheBean(int codReserva) {
    DetalheReservaBean bean = new DetalheReservaBean(codReserva, 
    cmbMesa.getSelectedItem(), if ());
    return bean;
    }*/
    /**
     * Carregar um ReservaBean contendo as informacoes de um unico cliente
     * 
     * @param codUser Codigo do cliente a ser carregado
     * @return ClienteBean contendo as informacoes do cliente
     */
    /*public ReservaBean carregaBean(int codUser) {
    ReservaBean bean = new ReservaBean(0, cmbClienteMesa.getSelectedItem(
    ).toString().substring(0, 4), dcrData.getDate(), 
    txtHoraInicio.getText(), txtHoraFim.getText(), );
    return bean;
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSeguirCli;
    private javax.swing.JButton btnUltimoCli;
    private javax.swing.JButton btnVoltarCli;
    private javax.swing.JButton btnVoltarInicioCli;
    private javax.swing.JComboBox cmbClienteMesa;
    private javax.swing.JComboBox cmbMesa;
    private com.toedter.calendar.JDateChooser dcrData;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JLabel lblClienteMesa;
    private javax.swing.JLabel lblClienteMesa1;
    private javax.swing.JLabel lblContador;
    private javax.swing.JLabel lblDataMesa;
    private javax.swing.JLabel lblDataMesa1;
    private javax.swing.JLabel lblHora1Mesa;
    private javax.swing.JLabel lblHora2Mesa;
    private javax.swing.JPanel pnlReservaMesa;
    private javax.swing.JScrollPane scpMesa;
    private javax.swing.JTable tabMesa;
    private javax.swing.JToolBar tobNavegador;
    private javax.swing.JFormattedTextField txtCodReserva;
    private javax.swing.JTextField txtContador;
    private javax.swing.JFormattedTextField txtHoraFim;
    private javax.swing.JFormattedTextField txtHoraInicio;
    // End of variables declaration//GEN-END:variables

    public void limparTabela(){
        DefaultTableModel tabReserva = (DefaultTableModel) tabMesa.getModel();
        tabReserva.setNumRows(0);
    }
    
    public void atualizarTabela(){
        try {
            ReservaDao dao = new ReservaDao();
            reservas = dao.pesquisar();
            for (int i = 0; i < reservas.size(); i++) {
                Object[] o = {
                    reservas.get(i).getCodReserva(),
                    reservas.get(i).getDtReserva(),
                    reservas.get(i).getCodCli(),
                    reservas.get(i).getCodUsuario(),
                    reservas.get(i).getHoraInicio(),
                    reservas.get(i).getHoraFim(),
                };
                defaultTableModel.addRow(o);
            }
            atualizaTable();
            atualizaToolbar(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmReservaMesa.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FrmReservaMesa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    @Override
    public void setData(int index) {
        intPosition = index;
        txtContador.setText(String.valueOf(intPosition + 1));
        //dcrData.setDate(reservas.get(index).getDtReserva());
        txtHoraInicio.setText(reservas.get(index).getHoraInicio());
        txtHoraFim.setText(reservas.get(index).getHoraFim());
        // TODO Combos!!!
        if (intPosition == 0) {
            setEnabledNavigator(false);
        } else if (intPosition == reservas.size() - 1) {
            setEnabledNavigator(true);
        }
    }

    @Override
    public void setEnabledNavigator(boolean b) {
        btnVoltarInicioCli.setEnabled(b);
        btnVoltarCli.setEnabled(b);
        btnSeguirCli.setEnabled(!b);
        btnUltimoCli.setEnabled(!b);
    }

    @Override
    public void setEnabledToolBar(boolean b) {
        btnAdicionar.setEnabled(b);
        btnAlterar.setEnabled(b);
        btnDeletar.setEnabled(b);
        btnSalvar.setEnabled(!b);
        btnCancelar.setEnabled(!b);
    }

    @Override
    public void habilitaCampos(boolean b) {
        dcrData.setEnabled(b);
        txtHoraFim.setEnabled(b);
        txtHoraInicio.setEnabled(b);
        cmbClienteMesa.setEnabled(b);
        cmbMesa.setEnabled(b);
    }

    //@Override
    public void limpaCampos() {
        dcrData.setDate(new Date());
        txtHoraFim.setValue("");
        txtHoraInicio.setValue("");
        cmbClienteMesa.setSelectedIndex(0);
        cmbMesa.setSelectedIndex(0);
    }

    @Override
    public void atualizaTable() {
        tabMesa.setModel(defaultTableModel);
    }

    @Override
    public void atualizaToolbar(boolean novo) {
        lblContador.setText("de ( " + reservas.size() + " )");
        if (novo && !reservas.isEmpty()) {
            setData(reservas.size() - 1);
        } else if (!reservas.isEmpty()) {
            setData(intPosition);
        }
    }

    @Override
    public void begin() {
        defaultTableModel.addColumn("Cododigo Reserva");
        defaultTableModel.addColumn("Data da Reserva");
        defaultTableModel.addColumn("Cliente");
        defaultTableModel.addColumn("Codigo Usuario");
        defaultTableModel.addColumn("Inicio");
        defaultTableModel.addColumn("Fim");
        
        try {
            ReservaDao dao = new ReservaDao();
            reservas = dao.pesquisar();
            for (int i = 0; i < reservas.size(); i++) {
                Object[] o = {
                    reservas.get(i).getCodReserva(),
                    reservas.get(i).getDtReserva(),
                    reservas.get(i).getCodCli(),
                    reservas.get(i).getCodUsuario(),
                    reservas.get(i).getHoraInicio(),
                    reservas.get(i).getHoraFim(),
                };
                defaultTableModel.addRow(o);
            }
            atualizaTable();
            atualizaToolbar(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmCadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FrmCadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (!reservas.isEmpty()) {
            setData(0);
        }
    }

    @Override
    public void setActionListener(ActionListener al) {
//        btnAdicionar.addActionListener(al);
//        btnAdicionar.setActionCommand("Adicionar");
//        btnDeletar.addActionListener(al);
//        btnDeletar.setActionCommand("Deletar");
//        btnAlterar.addActionListener(al);
//        btnAlterar.setActionCommand("Alterar");
//        btnSalvar.addActionListener(al);
//        btnSalvar.setActionCommand("Salvar");
//        btnCancelar.addActionListener(al);
//        btnCancelar.setActionCommand("Cancelar");
    }

    @Override
    public void performAction(KeyEvent evt) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void performNavigateAction(KeyEvent evt) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
