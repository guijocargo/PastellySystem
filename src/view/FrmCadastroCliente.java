package view;

import controller.ClienteDao;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import model.ClienteBean;

/**
 *
 * @author Guilherme / Francisco
 */
public class FrmCadastroCliente extends javax.swing.JInternalFrame
        implements IViewMetodosPadrao, IOuvintesPadrao, ITeclasPadrao {

    public List<ClienteBean> clientes = new ArrayList<ClienteBean>();
    public int intPosition = 0;
    public boolean booInclusao = false;
    public boolean booAlteracao = false;
    private boolean booAddTable = true;
    public boolean booFoneFocus = true;
    private static FrmCadastroCliente _instance = null;
    MaskFormatter mfCadastro;
    MaskFormatter mfContato;
    public DefaultTableModel defaultTableModel;

    public static synchronized FrmCadastroCliente getInstance() {
        if (_instance == null) {
            _instance = new FrmCadastroCliente();
        }
        return _instance;
    }

    /**
     * Creates new form FrmCadastroCliente
     */
    private FrmCadastroCliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCadastroClientes = new javax.swing.JPanel();
        lblCodCli = new javax.swing.JLabel();
        lblNomeCli = new javax.swing.JLabel();
        lblDataCadastro = new javax.swing.JLabel();
        lblTEL = new javax.swing.JLabel();
        lblCEL = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtCod = new javax.swing.JTextField();
        txtData = new javax.swing.JFormattedTextField();
        txtTelefone = new javax.swing.JFormattedTextField();
        tobNavegador = new javax.swing.JToolBar();
        btnPrimeiro = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        txtContador = new javax.swing.JTextField();
        lblContador = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnProximo = new javax.swing.JButton();
        btnUltimo = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnAdicionar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtCelular = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabClientes = new javax.swing.JTable();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cadastrar Clientes");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        pnlCadastroClientes.setBackground(new java.awt.Color(254, 254, 204));

        lblCodCli.setText("CÃ“DIGO:");

        lblNomeCli.setText("NOME:");

        lblDataCadastro.setText("DATA DE CADASTRO:");

        lblTEL.setText("TEL.RESIDENCIAL:");

        lblCEL.setText("TEL.CELULAR:");

        txtNome.setEnabled(false);
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeKeyReleased(evt);
            }
        });

        txtCod.setEditable(false);
        txtCod.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCod.setText("1");
        txtCod.setOpaque(false);

        txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        txtData.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtData.setText("  /  /    ");
        txtData.setEnabled(false);
        txtData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDataKeyReleased(evt);
            }
        });

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(00)0000-0000")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefone.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTelefone.setText("(  )    -    ");
        txtTelefone.setEnabled(false);
        txtTelefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelefoneFocusGained(evt);
            }
        });
        txtTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefoneKeyReleased(evt);
            }
        });

        tobNavegador.setBackground(new java.awt.Color(254, 254, 150));
        tobNavegador.setRollover(true);

        btnPrimeiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/primeiro.png"))); // NOI18N
        btnPrimeiro.setFocusable(false);
        btnPrimeiro.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPrimeiro.setOpaque(false);
        btnPrimeiro.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeiroActionPerformed(evt);
            }
        });
        btnPrimeiro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnPrimeiroKeyReleased(evt);
            }
        });
        tobNavegador.add(btnPrimeiro);

        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/anterior.png"))); // NOI18N
        btnVoltar.setFocusable(false);
        btnVoltar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVoltar.setOpaque(false);
        btnVoltar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        btnVoltar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnVoltarKeyReleased(evt);
            }
        });
        tobNavegador.add(btnVoltar);
        tobNavegador.add(jSeparator1);

        txtContador.setText("0");
        txtContador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtContadorKeyReleased(evt);
            }
        });
        tobNavegador.add(txtContador);

        lblContador.setText("de ( 0 )");
        tobNavegador.add(lblContador);
        tobNavegador.add(jSeparator2);

        btnProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/proximo.png"))); // NOI18N
        btnProximo.setFocusable(false);
        btnProximo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnProximo.setOpaque(false);
        btnProximo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProximoActionPerformed(evt);
            }
        });
        btnProximo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnProximoKeyReleased(evt);
            }
        });
        tobNavegador.add(btnProximo);

        btnUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/ultimo.png"))); // NOI18N
        btnUltimo.setFocusable(false);
        btnUltimo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUltimo.setOpaque(false);
        btnUltimo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });
        btnUltimo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnUltimoKeyReleased(evt);
            }
        });
        tobNavegador.add(btnUltimo);
        tobNavegador.add(jSeparator3);

        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/add-2-icon (2)_1.png"))); // NOI18N
        btnAdicionar.setFocusable(false);
        btnAdicionar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdicionar.setOpaque(false);
        btnAdicionar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdicionar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnAdicionarKeyReleased(evt);
            }
        });
        tobNavegador.add(btnAdicionar);

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/alterar.png"))); // NOI18N
        btnAlterar.setFocusable(false);
        btnAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAlterar.setOpaque(false);
        btnAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAlterar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnAlterarKeyReleased(evt);
            }
        });
        tobNavegador.add(btnAlterar);

        btnDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/delete-icon.png"))); // NOI18N
        btnDeletar.setFocusable(false);
        btnDeletar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDeletar.setOpaque(false);
        btnDeletar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDeletar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnDeletarKeyReleased(evt);
            }
        });
        tobNavegador.add(btnDeletar);
        tobNavegador.add(jSeparator4);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/basic-data-icon.png"))); // NOI18N
        btnSalvar.setEnabled(false);
        btnSalvar.setFocusable(false);
        btnSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalvar.setOpaque(false);
        btnSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnSalvarKeyReleased(evt);
            }
        });
        tobNavegador.add(btnSalvar);

        btnCancelar.setEnabled(false);
        btnCancelar.setFocusable(false);
        btnCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelar.setOpaque(false);
        btnCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnCancelarKeyReleased(evt);
            }
        });
        tobNavegador.add(btnCancelar);

        try {
            txtCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(00)0000-0000")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCelular.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCelular.setText("(  )    -    ");
        txtCelular.setEnabled(false);
        txtCelular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCelularKeyReleased(evt);
            }
        });

        tabClientes.setBackground(new java.awt.Color(255, 255, 204));
        tabClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Cadastrado:", "Telefone", "Celular"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabClientes.setColumnSelectionAllowed(true);
        tabClientes.setGridColor(new java.awt.Color(255, 255, 0));
        tabClientes.setSelectionBackground(new java.awt.Color(255, 255, 130));
        tabClientes.getTableHeader().setReorderingAllowed(false);
        tabClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabClientesMouseClicked(evt);
            }
        });
        tabClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabClientesKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabClientes);
        tabClientes.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabClientes.getColumnModel().getColumn(0).setResizable(false);
        tabClientes.getColumnModel().getColumn(0).setPreferredWidth(4);
        tabClientes.getColumnModel().getColumn(1).setResizable(false);
        tabClientes.getColumnModel().getColumn(2).setResizable(false);
        tabClientes.getColumnModel().getColumn(3).setResizable(false);
        tabClientes.getColumnModel().getColumn(4).setResizable(false);

        javax.swing.GroupLayout pnlCadastroClientesLayout = new javax.swing.GroupLayout(pnlCadastroClientes);
        pnlCadastroClientes.setLayout(pnlCadastroClientesLayout);
        pnlCadastroClientesLayout.setHorizontalGroup(
            pnlCadastroClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastroClientesLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlCadastroClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCadastroClientesLayout.createSequentialGroup()
                        .addComponent(lblCodCli)
                        .addGap(4, 4, 4)
                        .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                        .addComponent(lblDataCadastro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCadastroClientesLayout.createSequentialGroup()
                        .addComponent(lblNomeCli)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE))
                    .addGroup(pnlCadastroClientesLayout.createSequentialGroup()
                        .addComponent(lblTEL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCEL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCelular, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(tobNavegador, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
        );
        pnlCadastroClientesLayout.setVerticalGroup(
            pnlCadastroClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastroClientesLayout.createSequentialGroup()
                .addComponent(tobNavegador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCadastroClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlCadastroClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlCadastroClientesLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(lblCodCli))
                        .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCadastroClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblDataCadastro)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(pnlCadastroClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCadastroClientesLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lblNomeCli))
                    .addGroup(pnlCadastroClientesLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(pnlCadastroClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCadastroClientesLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lblTEL))
                    .addGroup(pnlCadastroClientesLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlCadastroClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCEL))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCadastroClientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCadastroClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabClientesMouseClicked
        switch (evt.getClickCount()) {
            case 1:
                if (booAlteracao) {
                    btnCancelar.doClick();
                    booAlteracao = false;
                } else if (booInclusao) {
                    booInclusao = false;
                }
                setData(tabClientes.getSelectedRow());
                break;
            case 2:
                if (booAlteracao) {
                    btnCancelar.doClick();
                } else if (booInclusao) {
                    booInclusao = false;
                }
                setData(tabClientes.getSelectedRow());
                btnAlterar.doClick();
                break;
        }
    }//GEN-LAST:event_tabClientesMouseClicked

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        _instance = null;
        setVisible(false);
    }//GEN-LAST:event_formInternalFrameClosing

    private void btnPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeiroActionPerformed
        setData(0);
    }//GEN-LAST:event_btnPrimeiroActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        setData(intPosition - 1);
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProximoActionPerformed
        setData(intPosition + 1);
    }//GEN-LAST:event_btnProximoActionPerformed

    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed
        setData(clientes.size() - 1);
    }//GEN-LAST:event_btnUltimoActionPerformed

    private void btnPrimeiroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnPrimeiroKeyReleased
        performNavigateAction(evt);
    }//GEN-LAST:event_btnPrimeiroKeyReleased

    private void btnVoltarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnVoltarKeyReleased
        performNavigateAction(evt);
    }//GEN-LAST:event_btnVoltarKeyReleased

    private void txtContadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContadorKeyReleased
        performNavigateAction(evt);

        // Verifica se foi realmente digitado um nÃºmero, caso nÃ£o, o caractere 
        // digitado Ã© apagado
        int intKeyCode = evt.getKeyCode();
        switch (intKeyCode) {
            case KeyEvent.VK_0:
                break;
            case KeyEvent.VK_1:
                break;
            case KeyEvent.VK_2:
                break;
            case KeyEvent.VK_3:
                break;
            case KeyEvent.VK_4:
                break;
            case KeyEvent.VK_5:
                break;
            case KeyEvent.VK_6:
                break;
            case KeyEvent.VK_7:
                break;
            case KeyEvent.VK_8:
                break;
            case KeyEvent.VK_9:
                break;
            case KeyEvent.VK_NUMPAD0:
                break;
            case KeyEvent.VK_NUMPAD1:
                break;
            case KeyEvent.VK_NUMPAD2:
                break;
            case KeyEvent.VK_NUMPAD3:
                break;
            case KeyEvent.VK_NUMPAD4:
                break;
            case KeyEvent.VK_NUMPAD5:
                break;
            case KeyEvent.VK_NUMPAD6:
                break;
            case KeyEvent.VK_NUMPAD7:
                break;
            case KeyEvent.VK_NUMPAD8:
                break;
            case KeyEvent.VK_NUMPAD9:
                break;
            default:
                txtContador.setText(txtContador.getText().replace(
                        evt.getKeyChar(), ' ').trim());
                break;
        }

        if (intKeyCode == KeyEvent.VK_ENTER) {
            txtData.requestFocus();
            setData(Integer.parseInt(txtContador.getText()) - 1);
        }
    }//GEN-LAST:event_txtContadorKeyReleased

    private void btnProximoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnProximoKeyReleased
        performNavigateAction(evt);
    }//GEN-LAST:event_btnProximoKeyReleased

    private void btnUltimoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnUltimoKeyReleased
        performNavigateAction(evt);
    }//GEN-LAST:event_btnUltimoKeyReleased

    private void btnAdicionarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAdicionarKeyReleased
        performNavigateAction(evt);
    }//GEN-LAST:event_btnAdicionarKeyReleased

    private void btnAlterarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAlterarKeyReleased
        performNavigateAction(evt);
    }//GEN-LAST:event_btnAlterarKeyReleased

    private void btnDeletarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnDeletarKeyReleased
        performNavigateAction(evt);
    }//GEN-LAST:event_btnDeletarKeyReleased

    private void btnSalvarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalvarKeyReleased
        performNavigateAction(evt);
    }//GEN-LAST:event_btnSalvarKeyReleased

    private void btnCancelarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCancelarKeyReleased
        performNavigateAction(evt);
    }//GEN-LAST:event_btnCancelarKeyReleased

    private void txtDataKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataKeyReleased
        performNavigateAction(evt);
    }//GEN-LAST:event_txtDataKeyReleased

    private void txtNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyReleased
        performNavigateAction(evt);
    }//GEN-LAST:event_txtNomeKeyReleased

    private void txtCelularKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCelularKeyReleased
        performNavigateAction(evt);
    }//GEN-LAST:event_txtCelularKeyReleased

    private void txtTelefoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefoneKeyReleased
        performNavigateAction(evt);
    }//GEN-LAST:event_txtTelefoneKeyReleased

    private void tabClientesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabClientesKeyReleased
        performNavigateAction(evt);
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            if (booAlteracao) {
                btnCancelar.doClick();
                booAlteracao = false;
            } else if (booInclusao) {
                booInclusao = false;
            }
            setData(tabClientes.getSelectedRow());
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            if (booAlteracao) {
                btnCancelar.doClick();
                booAlteracao = false;
            } else if (booInclusao) {
                booInclusao = false;
            }
            setData(tabClientes.getSelectedRow());
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (booAlteracao) {
                btnCancelar.doClick();
                booAlteracao = false;
            } else if (booInclusao) {
                booInclusao = false;
            }
            setData(tabClientes.getSelectedRow());
            btnAlterar.doClick();
        }
    }//GEN-LAST:event_tabClientesKeyReleased

    private void txtTelefoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefoneFocusGained
        if (booFoneFocus) {
            txtCelular.requestFocus();
            booFoneFocus = false;
            txtTelefone.requestFocus();
        }
    }//GEN-LAST:event_txtTelefoneFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new FrmCadastroCliente().setVisible(true);
            }
        });
    }

    /**
     * MÃ©todo responsÃ¡vel por preparar o FormulÃ¡rio para a inclusÃ£o de um novo
     * cliente
     */
    public void novoCliente() {
        txtCod.setText("");
        txtContador.setText("");
        txtCelular.requestFocus();
        txtData.requestFocus();
        Date data = new Date(System.currentTimeMillis());
        SimpleDateFormat formatarDate = new SimpleDateFormat("dd/MM/yyyy");
        txtData.setText(formatarDate.format(data));
    }

    /**
     * Carregar um ClienteBean contendo as informaÃ§Ãµes de um Ãºnico cliente
     * 
     * @param codUser CÃ³digo do cliente a ser carregado
     * @return ClienteBean Um ClienteBean contendo as informaÃ§Ãµes do cliente
     */
    public ClienteBean carregaBean(int codUser) {
        int intCliente = 0;
        if (!txtCod.getText().isEmpty()) {
            intCliente = Integer.parseInt(txtCod.getText());
        }
        ClienteBean bean = new ClienteBean(txtNome.getText(),
                txtCelular.getText(), txtData.getText(), txtTelefone.getText(),
                intCliente, codUser);
        return bean;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnPrimeiro;
    private javax.swing.JButton btnProximo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JLabel lblCEL;
    private javax.swing.JLabel lblCodCli;
    private javax.swing.JLabel lblContador;
    private javax.swing.JLabel lblDataCadastro;
    private javax.swing.JLabel lblNomeCli;
    private javax.swing.JLabel lblTEL;
    private javax.swing.JPanel pnlCadastroClientes;
    private javax.swing.JTable tabClientes;
    private javax.swing.JToolBar tobNavegador;
    private javax.swing.JFormattedTextField txtCelular;
    private javax.swing.JTextField txtCod;
    private javax.swing.JTextField txtContador;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextField txtNome;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setData(int index) {
        intPosition = index;
        txtContador.setText(String.valueOf(intPosition + 1));
        txtCod.setText(String.valueOf(clientes.get(index).getCodigo()));
        txtNome.setText(clientes.get(index).getNome());
        txtData.setText(clientes.get(index).getDataCadastro());
        txtTelefone.setText(clientes.get(index).getTelefone());
        txtCelular.setText(clientes.get(index).getCelular());
        if (intPosition > 0 && intPosition < clientes.size() - 1) {
            btnPrimeiro.setEnabled(true);
            btnVoltar.setEnabled(true);
            btnProximo.setEnabled(true);
            btnUltimo.setEnabled(true);
        } else {
            if (intPosition == 0) {
                setEnabledNavigator(false);
            } else if (intPosition == clientes.size() - 1) {
                setEnabledNavigator(true);
            }
        }
    }

    @Override
    public void setEnabledNavigator(boolean b) {
        btnPrimeiro.setEnabled(b);
        btnVoltar.setEnabled(b);
        btnProximo.setEnabled(!b);
        btnUltimo.setEnabled(!b);
    }

    @Override
    public void setEnabledToolBar(boolean b) {
        btnAdicionar.setEnabled(b);
        btnAlterar.setEnabled(b);
        btnDeletar.setEnabled(b);
        txtContador.setEnabled(b);
        btnSalvar.setEnabled(!b);
        btnCancelar.setEnabled(!b);
    }

    @Override
    public void habilitaCampos(boolean b) {
        txtCelular.setEnabled(b);
        txtNome.setEnabled(b);
        txtTelefone.setEnabled(b);
    }

    @Override
    public void limpaCampos() {
        txtCelular.setText("");
        txtCod.setText("");
        txtData.setText("");
        txtNome.setText("");
        txtTelefone.setText("");
    }

    @Override
    public void atualizaTable() {
        if (booAddTable) {
            tabClientes.setModel(defaultTableModel);
            booAddTable = false;
        }
    }

    public void addCliente(ClienteBean cliente) {
        clientes.add(cliente);
        lblContador.setText("de ( " + clientes.size() + " )");
        Object[] o = {
            clientes.get(clientes.size() - 1).getCodigo(),
            clientes.get(clientes.size() - 1).getNome(),
            clientes.get(clientes.size() - 1).getDataCadastro(),
            clientes.get(clientes.size() - 1).getTelefone(),
            clientes.get(clientes.size() - 1).getCelular()
        };
        defaultTableModel.addRow(o);
    }

    @Override
    public void atualizaToolbar(boolean novo) {
        lblContador.setText("de ( " + clientes.size() + " )");
        if (novo && !clientes.isEmpty()) {
            setData(clientes.size() - 1);
        } else if (!clientes.isEmpty()) {
            setData(intPosition);
        }
    }

    @Override
    public void begin() {

        try {
            mfCadastro = new MaskFormatter("##/##/####");
            mfCadastro.setPlaceholder("_");
            mfCadastro.setValueContainsLiteralCharacters(true);
            mfCadastro.setValueClass(String.class);
            DefaultFormatterFactory dffCadastro =
                    new DefaultFormatterFactory(mfCadastro);
            txtData.setFormatterFactory(dffCadastro);

            mfContato = new MaskFormatter("(##)####-####");
            mfContato.setPlaceholder("_");
            mfContato.setValueContainsLiteralCharacters(true);
            mfContato.setValueClass(String.class);
            DefaultFormatterFactory dffContato =
                    new DefaultFormatterFactory(mfContato);
            txtCelular.setFormatterFactory(dffContato);
            txtTelefone.setFormatterFactory(dffContato);
        } catch (ParseException ex) {
            Logger.getLogger(FrmCadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
        }

        defaultTableModel = new DefaultTableModel() {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        defaultTableModel.addColumn("ID");
        defaultTableModel.addColumn("Nome");
        defaultTableModel.addColumn("Cadastrado:");
        defaultTableModel.addColumn("Telefone");
        defaultTableModel.addColumn("Celular");
        try {
            ClienteDao dao = new ClienteDao();
            clientes = dao.pesquisar();
            for (int i = 0; i < clientes.size(); i++) {
                Object[] o = {
                    clientes.get(i).getCodigo(),
                    clientes.get(i).getNome(),
                    clientes.get(i).getDataCadastro(),
                    clientes.get(i).getTelefone(),
                    clientes.get(i).getCelular()
                };
                defaultTableModel.addRow(o);
            }
            atualizaTable();
            atualizaToolbar(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmCadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FrmCadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (!clientes.isEmpty()) {
            setData(0);
        }
    }

    @Override
    public void setActionListener(ActionListener al) {
        btnAdicionar.addActionListener(al);
        btnAdicionar.setActionCommand("Adicionar");
        btnDeletar.addActionListener(al);
        btnDeletar.setActionCommand("Deletar");
        btnAlterar.addActionListener(al);
        btnAlterar.setActionCommand("Alterar");
        btnSalvar.addActionListener(al);
        btnSalvar.setActionCommand("Salvar");
        btnCancelar.addActionListener(al);
        btnCancelar.setActionCommand("Cancelar");
    }

    @Override
    public void performAction(KeyEvent evt) {
    }

    @Override
    public void performNavigateAction(KeyEvent evt) {
        if (evt.isControlDown() && evt.isShiftDown()) {
            switch (evt.getKeyCode()) {
                case KeyEvent.VK_RIGHT:
                    btnUltimo.doClick();
                    break;
                case KeyEvent.VK_LEFT:
                    btnPrimeiro.doClick();
                    break;
            }
        } else if (evt.isControlDown()) {
            switch (evt.getKeyCode()) {
                case KeyEvent.VK_RIGHT:
                    btnProximo.doClick();
                    break;
                case KeyEvent.VK_LEFT:
                    btnVoltar.doClick();
                    break;
            }
        }
    }
}
